/= react_component 'Main'

.column.row.work

  ul#extraction-forms-projects-tabs.tabs data-deep-link='true' data-deep-link-smudge='true' data-deep-link-smudge-delay='600' data-update-history='true' data-tabs=''

    - @extraction_forms_projects.each do |efp|

      li.tabs-title
        = link_to efp.extraction_form.name, "#panel-extraction-forms-project-#{ efp.id.to_s }", title: "Extraction Form: #{ efp.extraction_form.name }"

  .tabs-content data-tabs-content='extraction-forms-projects-tabs'

    - @extraction_forms_projects.each do |efp|

      .tabs-panel id="panel-extraction-forms-project-#{ efp.id.to_s }"

        .row
          .column.medium-3
            ul.tabs.vertical id="extraction-forms-projects-#{ efp.id.to_s }-vertical-tabs" data-deep-link='true' data-deep-link-smudge='true' data-deep-link-smudge-delay='600' data-update-history='true' data-tabs=''

              - efp.extraction_forms_projects_sections.includes(:section).each do |efps|

                li.tabs-title
                  - section = efps.section.name
                  = link_to section, "#panel-tab-#{ efps.id.to_s }", title: section

          .column.medium-9
            .tabs-content.vertical data-tabs-content="extraction-forms-projects-#{ efp.id.to_s }-vertical-tabs"

              - efp.extraction_forms_projects_sections.includes(:extraction_forms_projects_section_type, :section, :type1s).each do |efps|

                .tabs-panel id="panel-tab-#{ efps.id.to_s }"

                  .column.row

                    / Arms | Outcomes
                    - if efps.extraction_forms_projects_section_type.name == 'Type 1'

                      - section_name = efps.section.name
                      h4 = section_name
                      blockquote
                        | Assign #{ section_name } to this Extraction.
                        cite Friendly Helper

                      = simple_form_for(ExtractionsExtractionFormsProjectsSection.find_or_create_by(extraction: @extraction, extraction_forms_projects_section: efps), html: { data: { 'abide': '' } }) do |f|
                        = f.error_notification

                        .form-inputs
                          = f.association :type1s,
                            input_html: { class: 'hook-up-select2-to-type1-selections',
                                          style: 'width: 75%;',
                                          data: { 'extraction-forms-projects-section-id': efps.id.to_s } },
                                          collection: efps.type1s,
                                          label: false

                        .form-actions
                          = f.button :submit

                    / Design Details | Arm Details | Sample Characteristics | Outcome Details | Quality
                    - elsif efps.extraction_forms_projects_section_type.name == 'Type 2'

                      // Put a form for capturing the data for this extraction for this section

                    / Results
                    - elsif efps.extraction_forms_projects_section_type.name == 'Type 3'

                      // Put a form for capturing the data for this extraction for this section

                    / Key Questions
                    - elsif efps.extraction_forms_projects_section_type.name == 'Key Questions'

                      h4 Key Questions

                      ul

                        - @extraction.key_questions_projects.where(extraction_forms_projects_section: efps).includes(:key_question).each do |kqp|
                          li = kqp.key_question.name

= link_to 'Back', project_extractions_path(@extraction.projects_users_role.projects_user.project)
